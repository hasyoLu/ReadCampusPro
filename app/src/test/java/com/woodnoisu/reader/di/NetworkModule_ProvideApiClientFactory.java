// Generated by Dagger (https://dagger.dev).
package com.woodnoisu.reader.di;

import com.woodnoisu.ktReader.network.ApiClient;
import com.woodnoisu.ktReader.network.ApiService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideApiClientFactory implements Factory<ApiClient> {
  private final Provider<ApiService> apiServiceProvider;

  public NetworkModule_ProvideApiClientFactory(Provider<ApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public ApiClient get() {
    return provideApiClient(apiServiceProvider.get());
  }

  public static NetworkModule_ProvideApiClientFactory create(
      Provider<ApiService> apiServiceProvider) {
    return new NetworkModule_ProvideApiClientFactory(apiServiceProvider);
  }

  public static ApiClient provideApiClient(ApiService apiService) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideApiClient(apiService));
  }
}
