// Generated by Dagger (https://dagger.dev).
package com.woodnoisu.reader.di;

import com.woodnoisu.ktReader.network.HtmlClient;
import com.woodnoisu.ktReader.network.HtmlService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideHtmlClientFactory implements Factory<HtmlClient> {
  private final Provider<HtmlService> htmlServiceProvider;

  public NetworkModule_ProvideHtmlClientFactory(Provider<HtmlService> htmlServiceProvider) {
    this.htmlServiceProvider = htmlServiceProvider;
  }

  @Override
  public HtmlClient get() {
    return provideHtmlClient(htmlServiceProvider.get());
  }

  public static NetworkModule_ProvideHtmlClientFactory create(
      Provider<HtmlService> htmlServiceProvider) {
    return new NetworkModule_ProvideHtmlClientFactory(htmlServiceProvider);
  }

  public static HtmlClient provideHtmlClient(HtmlService htmlService) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideHtmlClient(htmlService));
  }
}
